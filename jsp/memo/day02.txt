※ File > Open Projects From File System...에서 폴더를 추가해서 가져올 때
	파일에 오류가 발생할 경우
	프로젝트 우클릭 > Build path > Configure Build path... > Libraries > 
	오류나는 JRE System Library 클릭하고 Remove > 
	Add Library... > JRE System Library > Next > Finish > Apply >
	Order and Export > Select All > Apply 

※ for문에서 "}"도 자바 코드라서 <% %>사이에 넣어주어야 함
	ex) <%for(int i=0; i<5; i++){%>
		HTML 언어
	     <%}%>

	     만약 <%for(int i=0; i<5; i++){ HTML 언어 }%>
		이렇게 쓴다면 HTML 언어는 자바코드로 인식되서 오류가 발생한다.
		
※ 페이지 이동에서 가장 중요한건 데이터가 같이 이동하는 것
---------------------------------------------------------------------------------------
자바빈즈(자바 객체)
	JSP의 【표준 액션 태그를 통해 접근할 수 있는 자바 클래스】로서,
	기본생성자, 멤버 변수(필드)와 setter, getter 메소드로 이루어져 있다.
	
	액션태그
		4. useBean - <jsp:useBean />	(기본생성자만 호출)
		5. setProperty - <jsp:setProperty />	(setter)
		6. getProperty - <jsp:getProperty />	(getter)

	자바빈즈 태그 사용 문법
		- 객체 생성
			자바 : MemberVO member = new Member();
			JSP : <jsp:useBean class="com.korea.beans.MemberVO" id="member"/>
						[패키지.클래스명]		[객체명]
				<% MemberVO vo = new MemberVO() %>와 같다.

		- setter()
			member.setName("한동석");
			<jsp:setProperty name="member" property="name" value="한동석"/>
					[객체명]		[필드명]		[값]
				필드명은 setName()으로 안쓰고 private이 걸려있는 필드명을 써준다.

		- getter()
			member.getName();
			<jsp:getProperty name="member" property="name"/>
					[객체명]		[필드명]
				필드명은 getName()으로 안쓰고 private이 걸려있는 필드명을 써준다.

	자바빈즈 규칙
		1. 패키지화
			반드시 패키지를 만들어서 쓰자(default 패키지 사용 X)
		2. 멤버변수 접근자 private으로 설정
			getter, setter 사용을 강제하기 위해서
		3. getter, setter 메소드 접근자는 public
		4. 기본 생성자 반드시 선언(매개변수가 없는 생성자)

※ Dbeaver 실행해서 javabeans 프로젝트 생성
	Scripts 생성( ctrl + ] )
		이름은 javabeans.sql로 바꾸기
	이클립스에서도 build path에서 jar 추가하기
	WebContent의 WEB-INF 안에 lib에도 ojdbc6.jar를 복사해서 붙여넣는다.
		ojdbc6.jar의 경로 : C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib

※ 【HTML 주석(<!-- -->)은 컴파일은 되지만 표현이 되지 않는 것】이라서
	JSP에 주석의 내용이 적용될 수도 있다.
	그러므로 JSP 주석(<%-- -->%)을 사용하도록 하자.
	【JSP의 주석은 컴파일도 안되고 표현도 안된다.】
---------------------------------------------------------------------------------------
내장 객체
	【객체화 없이 사용할 수 있는 객체】이며, jsp파일이 서블릿으로 변환될 때
	웹 컨테이너가 자동으로 메모리에 할당하며 제공한다.
	자바코드 작성하는 곳에서만 사용할 수 있다.
		<% %>, <%= %>, <%! %> 등

	request : 웹 브라우저의 요청 정보를 저장
	response : 웹 브라우저의 요청에 대한 응답 정보를 저장
	out : JSP페이지 body에 출력할 내용 정보를 저장
	session : 하나의 웹 브라우저의 정보를 유지하기 위한 세션 정보를 저장
	pageContext : JSP페이지에 대한 정보를 저장(보통 MVC모델2에서 많이 쓴다.)
	config : JSP페이지에 대한 설정 정보를 저장
	exeception : JSP페이지에 예외가 발생한 경우 사용되는 객체
---------------------------------------------------------------------------------------
GET방식과 POST방식
	- GET
		주소에 데이터를 추가해서 전달하는 방식.
		【URL에 ?가 들어가면 GET방식】	
		보통 쿼리 문자열(query string)에 포함되어 전송되므로, 길이에 제한이 있으며
		주소에 데이터가 보이므로 보안상 취약점이 존재한다.
			※ 쿼리 문자열 : URL에서 ? 이후부터가 쿼리 문자열
		중요한 데이터는 POST 방식을 사용하여 요청하는 것이 좋지만 POST방식보다
		전송 속도가 빠르다.
	
	- POST
		데이터를 별도로 첨부하여 전달하는 방식.
		브라우저 히스토리에도 남지 않고 데이터는 쿼리 문자열과는 별도로 전송된다.
		따라서 길이의 제한도 없으며, GET방식 보다는 보안성이 높다.
		하지만 GET방식보다 상대적으로 느리다.
			【데이터가 header라는 공간에 담기고 그 공간은 URL 뒤에 숨어있다.】

	결론
		전송할 데이터의 양이 작고 노출되어도 무방하다면 GET방식을 사용하고
		전송할 데이터의 양이 크거나 노출이 되면 안될 데이터라면 POST방식을 사용한다.
---------------------------------------------------------------------------------------	
회원가입 중복검사 실습(day02/join.jsp 참고)
---------------------------------------------------------------------------------------
※ response.sendRedirect("경로") : 경로로 이동한다.

※ 이력서 적을 때 성장배경, 지원동기 같은 것의 소주제를 강하게 적자!
※ 무조건 Spring으로 취업한다고 생각하자
※ 면접 시 배우겠습니다 이런 말을 하지 말자
	제 실력 이상을 보여드리겠습니다.
※ 비전공자라면 비전공자의 장점을 내세우자
	다른 일을 해보았다는걸 내세우기
