-- 신고하기 시퀀스
CREATE SEQUENCE DG_REPORT_SEQ;
-- 신고하기 테이블
-- 끝
CREATE TABLE DG_REPORT(
   REPORTNUM NUMBER,
   REPORTTITLE VARCHAR2(1000),
   REPORTID VARCHAR2(500),
   REPORTCONTENT VARCHAR2(3000),
   UPLOAD DATE DEFAULT SYSDATE,
   READCOUNT NUMBER,
   CONSTRAINT DG_REPORT_PK PRIMARY KEY(REPORTNUM),
   CONSTRAINT REPORT_MEMBER_FK FOREIGN KEY(REPORTID) REFERENCES DG_MEMBER(MEMBERID),
   CONSTRAINT REPORT_TRAINER_FK FOREIGN KEY(REPORTID) REFERENCES DG_TRAINER(TRAINERID)
);
DROP TABLE DG_REPORT;

CREATE TABLE DG_ADMIN(
	ADMINID VARCHAR2(500),
	ADMINPW VARCHAR2(500),
	CONSTRAINT DG_ADMIN_PK PRIMARY KEY(ADMINID)
);

INSERT INTO DG_ADMIN VALUES('admin', '1234');

====================================================================

-- 회원 회원가입
-- 끝
CREATE TABLE DG_MEMBER(
   MEMBERID VARCHAR2(200),
   MEMBERPW VARCHAR2(300),
   MEMBERPHONE VARCHAR2(100),
   MEMBERPOINT NUMBER DEFAULT 0,
   MEMBERTRADE VARCHAR2(2000),
   CONSTRAINT DG_MEMBER_PK PRIMARY KEY(MEMBERID)
);

INSERT INTO DG_MEMBER VALUES('test', '123', '01000000000', 0, '...');
SELECT * FROM DG_MEMBER;
UPDATE DG_MEMBER SET MEMBERPOINT = 50000 WHERE MEMBERID = 'test1';
-- 회원 사진 게시판
-- 회원이 탈퇴하면 회원 사진 게시판에 회원이 올린 게시글도 삭제
-- 끝
CREATE SEQUENCE DG_PHOTO_SEQ;
CREATE TABLE DG_PHOTOBOARD(
   UPLOAD DATE DEFAULT SYSDATE,
   PHOTOBOARDNUM NUMBER,
   PHOTOBOARDTITLE VARCHAR2(1000),
   MEMBERID VARCHAR2(200),
   PHOTOBOARDCONTENT VARCHAR2(3000),
   READCOUNT NUMBER,
   CONSTRAINT DG_PHOTO_PK PRIMARY KEY(PHOTOBOARDNUM),
   CONSTRAINT DG_PHOTO_FK FOREIGN KEY(MEMBERID) REFERENCES DG_MEMBER(MEMBERID) ON DELETE CASCADE
);

-- 회원 사진 게시판 댓글
-- 회원이 올린 게시글이 삭제되면 게시판 댓글도 삭제
-- 끝
CREATE SEQUENCE DG_MREPLY_SEQ;
CREATE TABLE DG_MREPLY(
   MREPLYNUM NUMBER,
   UPLOAD DATE DEFAULT SYSDATE,
   PHOTONUM NUMBER,
   MEMBERID VARCHAR2(200),
   MREPLYCONTENT VARCHAR2(3000),
   CONSTRAINT DG_MREPLY_PK PRIMARY KEY(MREPLYNUM),
   CONSTRAINT DG_MREPLY_MEMBER_FK FOREIGN KEY(MEMBERID) REFERENCES DG_MEMBER(MEMBERID),
   CONSTRAINT DG_MREPLY_PHOTO_FK FOREIGN KEY(PHOTONUM) REFERENCES DG_PHOTOBOARD(PHOTOBOARDNUM) ON DELETE CASCADE
);

-- 리뷰 쓰기
-- 끝
CREATE SEQUENCE DG_REVIEW_SEQ;
CREATE TABLE DG_REVIEW(
   UPLOAD DATE DEFAULT SYSDATE,
   REVIEWNUM NUMBER,
   TRAINERID VARCHAR2(200),
   MEMBERID VARCHAR2(200),
   REVIEWCONTENT VARCHAR2(3000),
   CONSTRAINT DG_REVIEW_PK PRIMARY KEY(REVIEWNUM),
   CONSTRAINT DG_REVIEW_TRAINER_FK FOREIGN KEY(TRAINERID) REFERENCES DG_TRAINER(TRAINERID) ON DELETE CASCADE,
   CONSTRAINT DG_REVIEW_MEMBER_FK FOREIGN KEY(MEMBERID) REFERENCES DG_MEMBER(MEMBERID) ON DELETE CASCADE
);

DROP TABLE DG_REVIEW;
INSERT INTO DG_REVIEW VALUES(SYSDATE, DG_REVIEW_SEQ.NEXTVAL, 'test2', 'test', 'ㅎㅇㅎㅇ');

SELECT * FROM DG_REVIEW;
DELETE DG_REVIEW;
SELECT COUNT(*) FROM DG_REVIEW;


-- 끝
CREATE SEQUENCE FILENAME_SEQ;
CREATE TABLE FILENAME(
   CATEGORYNUM NUMBER,
   BOARDNUM NUMBER,
   USERID VARCHAR2(200),
   FILENAME VARCHAR2(3000),
   CONSTRAINT FILE_PK PRIMARY KEY(FILENAME)
);

SELECT * FROM DG_MEMBER WHERE MEMBERID = 'test1';

SELECT * FROM FILENAME;
DELETE FILENAME;
SELECT FILENAME FROM FILENAME WHERE CATEGORYNUM = 6 AND BOARDNUM = 71;
DELETE DG_REVIEW WHERE REVIEWNUM = 204;

====================================================================

-- 문의 게시판
-- 회원이 탈퇴하면 회원이 남긴 문의도 삭제
CREATE SEQUENCE DG_QNA_SEQ;
CREATE TABLE DG_QNA(
   QNANUM NUMBER,
   UPLOAD DATE DEFAULT SYSDATE,
   QNATITLE VARCHAR2(500),
   MEMBERID VARCHAR2(200),
   QNACONTENT VARCHAR2(3000),
   READCOUNT NUMBER,
   CONSTRAINT DG_QNA_PK PRIMARY KEY(QNANUM),
   CONSTRAINT DG_QNA_FK FOREIGN KEY(MEMBERID) REFERENCES DG_MEMBER(MEMBERID) ON DELETE CASCADE
);
SELECT * FROM DG_QNA;

-- 문의 게시판 댓글
-- 문의 글이 삭제되면 문의 글에 대한 댓글도 삭제
CREATE SEQUENCE DG_QREPLY_SEQ;
CREATE TABLE DG_QREPLY(
   QREPLYNUM NUMBER(10),
   UPLOAD DATE DEFAULT SYSDATE,
   QNANUM NUMBER(10),
   MEMBERID VARCHAR2(100),
   QREPLYCONTENT VARCHAR2(3000),
   CONSTRAINT DG_QREPLY_PK PRIMARY KEY(QREPLYNUM),
   CONSTRAINT DG_QREPLY_QNA_FK FOREIGN KEY(QNANUM) REFERENCES DG_QNA(QNANUM) ON DELETE CASCADE,
   CONSTRAINT DG_QREPLY_MEMBER_FK FOREIGN KEY(MEMBERID) REFERENCES DG_MEMBER(MEMBERID)
);

-- 미완성
-- 거래내력 시퀀스
CREATE SEQUENCE DG_TRADE_SEQ;
-- 거래내역 테이블
CREATE TABLE DG_TRADE(
   TRADENUM NUMBER,
   USERID VARCHAR2(200),
   TRAINERID VARCHAR2(200),
   TRADECONTENT VARCHAR2(3000),
   CONSTRAINT DG_TRADE_PK PRIMARY KEY(TRADENUM)
);

DROP TABLE DG_TRADE;

INSERT INTO DG_TRADE VALUES(DG_TRADE_SEQ.NEXTVAL, 'test1', 'test10', '1000포인트 결제');
SELECT * FROM DG_TRADE;

SELECT TRAINERID FROM DG_TRADE WHERE


 SELECT * FROM DG_TRAINER WHERE TRAINERID IN
 	(SELECT TRAINERID FROM 
 		(SELECT T.TRAINERID, COUNT(*) C FROM DG_TRADE T GROUP BY T.TRAINERID HAVING COUNT(*) > 0 ORDER BY C DESC) 
 	WHERE ROWNUM <= 3)

====================================================================

CREATE SEQUENCE DG_TRAINER_SEQ;
-- 트레이너 회원가입
CREATE TABLE DG_TRAINER(
   TRAINERID VARCHAR2(200),
   TRAINERPW VARCHAR2(300),
   TRAINERNAME VARCHAR2(200),
   TRAINERPHONENUM VARCHAR2(100),
   TRAINERGENDER VARCHAR(10),
   TRAINEREMAIL VARCHAR2(300),
   TRAINERACCOUNT VARCHAR2(300),
   TRAINERADDRESSZIPCODE VARCHAR2(500),
   TRAINERADDRESS VARCHAR2(500),
   TRAINERADDRESSDETAIL VARCHAR2(500),
   TRAINERPRICE NUMBER DEFAULT 0,
   TRAINERPOINT NUMBER DEFAULT 0,
   TRAINERNUM NUMBER UNIQUE NOT NULL,     
   TRAINERCONTENT VARCHAR2(3000),
   TRAINERURL VARCHAR2(500),
   TRAINERLIKE NUMBER,
   CONSTRAINT DG_TRAINER_PK PRIMARY KEY(TRAINERID)
);
DROP TABLE DG_TRAINER;

INSERT INTO DG_TRAINER(TRAINERID, TRAINERPW, TRAINERNUM) VALUES('test2', '123123', 1);
INSERT INTO DG_TRAINER VALUES('test', '123123', 'a', '0', '남', 'a', 'a', '11111', 'a', 'a', 0, 0, 3, '월화수목금 다이어트 체형교정', '...', 0);
INSERT INTO DG_TRAINER VALUES('test1', '123123', 'a', '0', '여', 'a', 'a', '13111', 'a', 'a', 0, 0, 4, '월토일 체력증진 바디프로필', '...', 0);
INSERT INTO DG_TRAINER VALUES('test2', '123123', 'a', '0', '남', 'a', 'a', '11111', 'a', 'a', 0, 0, 5, '월화 다이어트 체형교정', '...', 0);
INSERT INTO DG_TRAINER VALUES('test3', '123123', 'a', '0', '여', 'a', 'a', '12111', 'a', 'a', 0, 0, 6, '토일 재활통증케어 체형교정', '...', 0);
INSERT INTO DG_TRAINER VALUES('test4', '123123', 'a', '0', '여', 'a', 'a', '11111', 'a', 'a', 0, 0, 7, '월화 다이어트 체형교정', '...', 0);
INSERT INTO DG_TRAINER VALUES('test5', '123123', 'a', '0', '남', 'a', 'a', '11111', 'a', 'a', 0, 0, 8, '수목 다이어트 체형교정', '...', 0);
INSERT INTO DG_TRAINER VALUES('test6', '123123', 'a', '0', '남', 'a', 'a', '15111', 'a', 'a', 0, 0, 9, '월화 체력증진 체형교정', '...', 0);
INSERT INTO DG_TRAINER VALUES('test7', '123123', 'a', '0', '남', 'a', 'a', '11111', 'a', 'a', 0, 0, 11, '월금 다이어트 체형교정', '...', 0);
INSERT INTO DG_TRAINER VALUES('test8', '123123', 'a', '0', '남', 'a', 'a', '11111', 'a', 'a', 0, 0, 12, '상담 후 결정 다이어트 체형교정', '...', 0);
INSERT INTO DG_TRAINER VALUES('test9', '123123', 'a', '0', '남', 'a', 'a', '11111', 'a', 'a', 0, 0, 13, '상담 후 결정 다이어트 체형교정', '...', 0);
INSERT INTO DG_TRAINER VALUES('test10', '123123', 'a', '0', '남', 'a', 'a', '11111', 'a', 'a', 0, 0, 14, '상담 후 결정 다이어트 체형교정', '...', 0);
INSERT INTO DG_TRAINER VALUES('test11', '123123', 'a', '0', '남', 'a', 'a', '11111', 'a', 'a', 0, 0, 15, '상담 후 결정 다이어트 체형교정', '...', 0);
INSERT INTO DG_TRAINER VALUES('test12', '123123', 'a', '0', '남', 'a', 'a', '11111', 'a', 'a', 0, 0, 16, '상담 후 결정 다이어트 체형교정', '...', 0);
INSERT INTO DG_TRAINER VALUES('test17', '123123', 'a', '0', '남', 'a', 'a', '11111', 'a', 'a', 0, 0, 18, '상담 후 결정 다이어트 체형교정', '...', 0);
INSERT INTO DG_TRAINER VALUES('test14', '123123', 'a', '0', '남', 'a', 'a', '11111', 'a', 'a', 0, 0, 19, '상담 후 결정 다이어트 체형교정', '...', 0);
INSERT INTO DG_TRAINER VALUES('test15', '123123', 'a', '0', '남', 'a', 'a', '11111', 'a', 'a', 0, 0, 20, '상담 후 결정 다이어트 체형교정', '...', 0);
INSERT INTO DG_TRAINER VALUES('test16', '123123', 'a', '0', '남', 'a', 'a', '11111', 'a', 'a', 0, 0, 21, '상담 후 결정 다이어트 체형교정', '...', 0);

--DROP TABLE DG_TRAINER;
--DROP TABLE DG_REVIEW;
--DROP TABLE DG_REPORT;
--DROP TABLE DG_QREPLY;
--DROP TABLE DG_PHOTOBOARD;
--DROP TABLE DG_QNA;
--DROP TABLE DG_MREPLY;
--DROP TABLE DG_MEMBER;
SELECT * FROM DG_TRAINER;
UPDATE DG_TRAINER SET TRAINERCONTENT = '월화수목 다이어트기타 체형교정' WHERE TRAINERID = '아이유';
UPDATE DG_TRAINER SET TRAINERGENDER = '여' WHERE TRAINERID = '아이유';
SELECT * FROM 
	(SELECT * FROM DG_TRAINER WHERE TRAINERCONTENT LIKE '%화수%' AND TRAINERCONTENT LIKE '%다이어트%')
WHERE TRAINERADDRESSZIPCODE LIKE '11%' AND TRAINERGENDER = '여';

UPDATE DG_TRAINER SET TRAINERPRICE = 90000 WHERE TRAINERID = 'test8';

SELECT * FROM DG_TRAINER WHERE TRAINERCONTENT LIKE '%화%' AND TRAINERCONTENT LIKE '%다이어트%';
UPDATE DG_TRAINER SET TRAINERPOINT = TRAINERPOINT + 90000 WHERE TRAINERID = 'test8'

