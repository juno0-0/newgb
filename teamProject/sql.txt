· 신고게시판
 - 시퀀스
	CREATE SEQUENCE DG_REPORT_SEQ;
 - 테이블
	CREATE TABLE DG_REPORT(
		REPORTNUM NUMBER,
		REPORTTITLE VARCHAR2(1000),
		REPORTID VARCHAR2(500),
		REPORTCONTENT VARCHAR2(3000),
		UPLOAD DATE DEFAULT SYSDATE,
		READCOUNT NUMBER,
		CONSTRAINT DG_REPORT_PK PRIMARY KEY(REPORTNUM)
	);

· 관리자 계정
 - 테이블
	CREATE TABLE DG_ADMIN(
		ADMINID VARCHAR2(500),
		ADMINPW VARCHAR2(500),
		CONSTRAINT DG_ADMIN_PK PRIMARY KEY(ADMINID)
	);

	INSERT INTO DG_ADMIN VALUES('admin', '1234');

· 회원 계정
 - 테이블
	CREATE TABLE DG_MEMBER(
		MEMBERID VARCHAR2(200),
		MEMBERPW VARCHAR2(300),
		MEMBERPHONE VARCHAR2(100),
		MEMBERPOINT NUMBER DEFAULT 0,
		CONSTRAINT DG_MEMBER_PK PRIMARY KEY(MEMBERID)
	);

· 사진 게시판
-- 시퀀스
	CREATE SEQUENCE DG_PHOTO_SEQ;
-- 테이블
	CREATE TABLE DG_PHOTOBOARD(
		UPLOAD DATE DEFAULT SYSDATE,
		PHOTOBOARDNUM NUMBER,
		PHOTOBOARDTITLE VARCHAR2(1000),
		MEMBERID VARCHAR2(200),
		PHOTOBOARDCONTENT VARCHAR2(3000),
		READCOUNT NUMBER,
		REPLYNUM NUMBER,
		CONSTRAINT DG_PHOTO_PK PRIMARY KEY(PHOTOBOARDNUM),
		CONSTRAINT DG_PHOTO_FK FOREIGN KEY(MEMBERID) REFERENCES DG_MEMBER(MEMBERID) ON DELETE CASCADE
	);


· 사진 게시판 댓글
 - 시퀀스
	CREATE SEQUENCE DG_MREPLY_SEQ;
 - 테이블
	CREATE TABLE DG_MREPLY(
		MREPLYNUM NUMBER,
		UPLOAD DATE DEFAULT SYSDATE,
		PHOTONUM NUMBER,
		MEMBERID VARCHAR2(200),
		MREPLYCONTENT VARCHAR2(3000),
		CONSTRAINT DG_MREPLY_PK PRIMARY KEY(MREPLYNUM),
		CONSTRAINT DG_MREPLY_MEMBER_FK FOREIGN KEY(MEMBERID) REFERENCES DG_MEMBER(MEMBERID),
		CONSTRAINT DG_MREPLY_PHOTO_FK FOREIGN KEY(PHOTONUM) REFERENCES DG_PHOTOBOARD(PHOTOBOARDNUM) ON DELETE CASCADE
	);

· 리뷰 게시판
 - 시퀀스
	CREATE SEQUENCE DG_REVIEW_SEQ;
 - 테이블
	CREATE TABLE DG_REVIEW(
		UPLOAD DATE DEFAULT SYSDATE,
		REVIEWNUM NUMBER,
		TRAINERID VARCHAR2(200),
		MEMBERID VARCHAR2(200),
		REVIEWCONTENT VARCHAR2(3000),
		CONSTRAINT DG_REVIEW_PK PRIMARY KEY(REVIEWNUM),
		CONSTRAINT DG_REVIEW_TRAINER_FK FOREIGN KEY(TRAINERID) REFERENCES DG_TRAINER(TRAINERID) ON DELETE CASCADE,
		CONSTRAINT DG_REVIEW_MEMBER_FK FOREIGN KEY(MEMBERID) REFERENCES DG_MEMBER(MEMBERID) ON DELETE CASCADE
	);

· 첨부 파일
 - 시퀀스
	CREATE SEQUENCE FILENAME_SEQ;
 - 테이블
	CREATE TABLE FILENAME(
		CATEGORYNUM NUMBER,
		BOARDNUM NUMBER,
		USERID VARCHAR2(200),
		FILENAME VARCHAR2(3000),
		CONSTRAINT FILE_PK PRIMARY KEY(FILENAME)
	);

· PROFILENAME(임지혁)
 - 시퀀스
	CREATE SEQUENCE DG_PROFILE_SEQ;
 - 테이블
	CREATE TABLE PROFILENAME(
		CATEGORYNUM NUMBER,
		BOARDNUM NUMBER,
		FILENAME VARCHAR2(3000),
		TRAINERID VARCHAR2(200),
		CONSTRAINT PROFILENAME_PK PRIMARY KEY(FILENAME),
		CONSTRAINT DG_PROFILENAME_TRAINER_FK FOREIGN KEY(TRAINERID) REFERENCES DG_TRAINER(TRAINERID) ON DELETE CASCADE
	); 

· DG_SNS(임지혁)
 - 시퀀스
	CREATE SEQUENCE DG_SNS_SEQ;
 - 테이블
	CREATE TABLE SNSFILENAME(
		CATEGORYNUM NUMBER,
		BOARDNUM NUMBER,
		FILENAME VARCHAR2(3000),
		TRAINERID VARCHAR2(200),
		CONSTRAINT SNSFILENAME_PK PRIMARY KEY(FILENAME),
		CONSTRAINT DG_SNSFILENAME_TRAINER_FK FOREIGN KEY(TRAINERID) REFERENCES DG_TRAINER(TRAINERID) ON DELETE CASCADE
	);

· 문의 게시판
 - 시퀀스
	CREATE SEQUENCE DG_QNA_SEQ;
 - 테이블
	CREATE TABLE DG_QNA(
		QNANUM NUMBER,
		UPLOAD DATE DEFAULT SYSDATE,
		QNATITLE VARCHAR2(500),
		MEMBERID VARCHAR2(200),
		QNACONTENT VARCHAR2(3000),
		READCOUNT NUMBER,
		CONSTRAINT DG_QNA_PK PRIMARY KEY(QNANUM)
	);

· 문의 게시판 댓글
 - 시퀀스
	CREATE SEQUENCE DG_QREPLY_SEQ;
 - 테이블
	CREATE TABLE DG_QREPLY(
		QREPLYNUM NUMBER(10),
		UPLOAD DATE DEFAULT SYSDATE,
		QNANUM NUMBER(10),
		MEMBERID VARCHAR2(100),
		QREPLYCONTENT VARCHAR2(3000),
		CONSTRAINT DG_QREPLY_PK PRIMARY KEY(QREPLYNUM)
	);

· 거래내역 테이블
 - 시퀀스
	CREATE SEQUENCE DG_TRADE_SEQ;
 - 테이블 
	CREATE TABLE DG_TRADE(
		TRADENUM NUMBER,
		USERID VARCHAR2(200),
		TRAINERID VARCHAR2(200),
		TRADECONTENT VARCHAR2(3000),
		UPLOAD DATE DEFAULT SYSDATE,
		CONSTRAINT DG_TRADE_PK PRIMARY KEY(TRADENUM)
	);

· 트레이너 계정
 - 시퀀스
	CREATE SEQUENCE DG_TRAINER_SEQ;
 - 테이블
	CREATE TABLE DG_TRAINER(
		TRAINERID VARCHAR2(200),
		TRAINERPW VARCHAR2(300),
		TRAINERNAME VARCHAR2(200),
		TRAINERPHONENUM VARCHAR2(100),
		TRAINERGENDER VARCHAR(10),
		TRAINEREMAIL VARCHAR2(300),
		TRAINERACCOUNT VARCHAR2(300),
		TRAINERADDRESSZIPCODE VARCHAR2(500),
		TRAINERADDRESS VARCHAR2(500),
		TRAINERADDRESSDETAIL VARCHAR2(500),
		TRAINERPRICE NUMBER DEFAULT 0,
		TRAINERPOINT NUMBER DEFAULT 0,
		TRAINERNUM NUMBER UNIQUE NOT NULL,     
		TRAINERCONTENT VARCHAR2(3000),
		TRAINERURL VARCHAR2(500),
		TRAINERLIKE NUMBER,
		TRAINERPROFILEIMAGE VARCHAR2(1000),
		CONSTRAINT DG_TRAINER_PK PRIMARY KEY(TRAINERID)
	);

· 검색 
 - 테이블
	CREATE TABLE DG_KEYWORD(
	   KEYWORD VARCHAR2(3000) PRIMARY KEY,
	   CNT NUMBER(38)
	);

- 중복검사 뷰
	CREATE VIEW ID_VIEW AS SELECT A.MEMBERID AS USERID FROM (SELECT MEMBERID FROM DG_MEMBER
		UNION ALL SELECT TRAINERID FROM DG_TRAINER
		UNION ALL SELECT ADMINID FROM DG_ADMIN) A;

 - 트리거 오류 발생 시 DROP TRIGGER TRAINERID_TGR;