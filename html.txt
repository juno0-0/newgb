사용자가 브라우저 환경에서 URL로 요청을 보냄
요청이 들어오면 httpd(http데몬)이 WAS를 깨워줌
	(항상 서버가 깨어있을 수 없기 때문에)
정적 데이터(회사 소개같이 사람에 따라 변경이 필요 없는 것)면
	바로 HTML로 응답해준다.
동적 데이터(xxx님 안녕하세요같이 사람에 따라 변경이 필요한 것)면
	WAS안의 웹 서버에서 웹 컨테이너로 가서 연산을 하고 다시 웹 서버로 돌아와서
	HTML로 응답해준다.
		※ WAS : Web Application Server
			웹 서버와 웹 컨테이너를 연결해주고
			통신해주는 환경을 조성하는 관리자

서버와 클라이언트
	클라이언트 : 서버에게 요청하는 것
	서버 : 요청받은 서비스를 제공(응답)해주는 것

웹(Web)
	컴퓨터끼리 연결되어 있는 모양이 거미줄 같아서 Web이라고 부른다.
	【요청과 응답이 일어나는 장소】★★★

웹 브라우저(Web browser)
	사용자의 요청에 맞는 주소로 찾아가서 인터넷의 컨텐츠
	(문서와 그림, 멀티미디어 파일 등)를 검색 및 열람 후
	사용자에게 응답하기 위한 응용프로그램의 총칭이다.
	주요 웹 브라우저로는 모질라 파이어폭스, 구글 크롬,
	인터넷 익스플로러, 마이크로소프트 엣지, 오페라, 사파리, 네이버 웨일 등이 있다.
	【요청 응답을 도와주는 프로그램】★★★

	※ 크롬은 보안성이 굉장히 강력해서 바이러스가 없지만
               좋은 의도마저 차단해버리는 경우가 있다.
	   그렇기 때문에 인터넷 익스플로러와 같이 쓰는 경우가 종종 있다.

프로토콜(protocol)
	사람끼리 소통할 때도 서로 이해할 수 있는 공용어를 사용해야 하듯이
	컴퓨터끼리도 공용어를 사용해야 한다.
	이러한 공용어를 원활하게 통신하기 위해 필요한 규약을 프로토콜이라고 한다.
	【서로 소통할 때 약속】★★★

	http://	(HyperText Transfer Protocol)
		클라이언트와 서버간의 웹 페이지 등의 자원을 통신하는 규약
		텍스트로 통신하기 때문에 가로채어 본다면 누구든 내용을 볼 수 있어서
		개발자들은 【소스코드 내에서 암호화】를 한다.

	https://	(HyperText Trasfer Protocol Secure Socket)
		SSL 프로토콜을 이용하여
		자원을 공개키 암호화 방식으로 암호화해서 통신하는 규약
			※ SSL(Secure Socket Layer)
			※ 공개키 암호화 방식 : 서로 다른 키 2개가 Map 구조로 존재하고,
					     1번 키로 암호화 했다면 반드시 2번 키로만 복호화가 가능하다.
		SSL 인증서 구입 비용 및 갱신 비용이 발생하고
		http에 비해서 서버에 부하가 더 많아진다.(암호화때문에)

IP(Internet Protocol)
	사람이 태어나면 출생신고를 하고 고유 번호인 주민번호를 발급받아서 서로를 구분하듯,
	네트워크 상에서 인터넷에 접속할 때 다른 컴퓨터와 구별될 수 있도록 하는 【고유 번호】를 말한다.

Domain
	IP주소는 기억하고 이해하기 힘들기 때문에
	이를 위해서 이름을 부여할 수 있도록 한 것.
	즉, 【IP주소를 변수에 담은 것】

WWW(World Wide Web)
	인터넷에 연결된 전 세계 컴퓨터들을 통해 사람들이 정보를 공유할 수 있는 정보 공간

W3C(World Wide Web Consortium)
	WWW를 위한 표준을 제정하고 관리하는 중립적인 기관

대표적인 웹 표준 언어
	1. HTML(HyperText Markup Language)
		어떤 정보에 표시를 해주는 언어
		프로그래밍 언어가 아니라 마크업 언어이다.
		웹 페이지에서 다른 페이지로 이동할 수 있도록 하는 마크업 언어
		또한 정보에 특정 표시를 해줄 수 있는 언어

		※ 마크업 언어 : 태그 방법 체계를 의미
			        태그 등을 이용하여 문서나 데이터의 구조를 기술하는 언어

	2. CSS(Cascading Style Sheets)
		서로간의 우선순위가 정해져있는 스타일시트
		구체적으로 어떤 스타일로 요소가 표시 되는 지를 정하는 규격이다.
		HTML 문서를 구조화 하는 것 뿐만 아니라 꾸미기도 할 수 있지만,
		동일한 디자인을 사용한 문서가 여러 개 있다면 변경 시 모두 하나씩
		수정해야 하는 불편함을 해결함과 동시에 
		【웹 페이지에서 내용과 스타일을 분리하고 역할도 분리해준다.(분업)】★★★
	
	3. XHTML(Extensible HTML)
		기존에 사용되던 HTML 규격이 가진 문제점을 극복하고,
		보다 다양한 분야에 응용될 수 있도록 해주는 여러가지 확장된 기능을 포함한다.
		하지만 XML 기반으로 만들어졌기 때문에 지원되지 않는 브라우저도 있다.
		따라서 【HTML과 XHTML은 사실상 큰 차이가 없이 사용된다.】

	4. XML(Extensible Markup Language)
		데이터전달, 세부 설정에서 많이 쓰인다.
			ex) <id>hds</id> 값에 id가 들어간 걸 추측할 수 있다.
		
		어떠한 데이터를 설명하기 위해 임의로 지은 태그로 데이터를 감싸고,
		태그로 데이터를 설명하며, 이것이 데이터의 표시(Markup)이 되고
		추가적인 데이터가 생기면 태그 추가와 내부 내용 추가를 할 수 있다.
		따라서 【데이터 전달과 세부 설정에 목적이 있다.】

		<? xml version="1.0"?>
		<컴퓨터언어>
			<C언어>C</C언어>
			<자바>자바</자바>
			<파이썬>파이썬</파이썬>
		</컴퓨터언어>
-------------------------------------------------------------------------------------------------------------------
웹 접근성
	【모든 사용자가 신체적, 환경적 조건에 관계없이 
	웹에 접근하여 이용할 수 있도록 보장하는 것을 의미한다.】
	마우스가 없는 황경이나 키보드만을 조작해야할 경우,
	신체적 장애로 인해 특수한 환경에서 접속을 해야되는 경우,
	브라우저별, 모바일 환경에서 접속해야 하는 경우와 같이
	다양한 플랫폼에서도 정보 제공이 다름이 없어야 한다는 것이다.
-------------------------------------------------------------------------------------------------------------------
톰캣 설치하는 방법
	※ 톰캣 : 서버, WAS

	구글에 Tomcat 검색
	→ Download 링크 클릭
	→ Tomcat8(8.5)버전.zip 파일 설치
	→ C드라이브에 압축 풀기(꼭)

톰캣 요청하는 방법
	C:.tomcat....../bin/startup.bat 실행
	→ 브라우저 URL에 localhost:8080 접속
		여기서 ID, PW 입력차잉 나온다면 포트가 충돌된 것
		그럴 경우
		C:/tomcat/conf/server.xml에 들어가서
		<Connection port="포트번호"...>
		여기서 포트번호를 8081 또는 8082 등으로 변경하고 다시 startup.bat 실행

	startup.bat이 실행하자마자 종료되는 경우
		환경변수에서 새로 만들기
		→ 변수명 : CATLINA_HOME
		→ 변수값 : C:/apache-tomcat-8.5.61
		→ PATH 들어가서 추가
		→ %CATALINA_HOME%\bin
		→ 전체 확인 후 다시 시도

아파치 경로 설정하는 방법
	하단에 servers를 클릭
	→ 아파치 폴더에 들어가서 폴더선택을 누른다.

tomcat 프로세스 죽이기
	cmd창에서 netstat -aon |find /i "listening" |find "포트번호" 입력
	→ PID를 알아내기
	→ taskkill /F /PID 알아낸PID
-------------------------------------------------------------------------------------------------------------------
HTML
	연산이 되는 프로그래밍 언어가 아닌 마크업 언어이다.
	
	마크업 언어
		우리가 보는 웹 페이지가 어떻게 구조화되어 있는지를 
		브라우저로 하여금 알 수 있도록 하는 언어.

	HTML의 요소
		<p>You are better</p>	//【요소의 시작부터 끝까지 하나의 객체로 봐야한다.】★★★★★
			<p> : 여는 태그(Opening Tag)
			        요소의 이름과 열고 닫는 꺽쇠 괄호로 구성된다.

			</p> : 닫는 태그(Closing Tag)
			         요소의 이름 앞에 "/"가 있다.
			         사용한 요소가 닫는 태그를 필요로 할 때에는 닫아줘야 한다.

			You are better : 요소의 내용(contents)
				         단순한 텍스트를 작성한다.

		각각을 모두 요소(Element)라고 한다.
		요소의 이름은 대소문자를 구분하지 않지만 가독성에 있어서
		【소문자로 작성하는 것을 권장】한다.

	내포된 요소(Nesting Elements)
		요소 안에 다른 요소를 넣는 기법
		
		<p>You are <strong>much</strong> better</p>
			<p>가 <strong>의 부모 요소인 것.

	요소의 종류
		블록 레벨 요소(Block-level Elements)
			웹 페이지 상에 블록을 만드는 요소
			코드 상에 한 줄로 이어 써도 앞 뒤 요소 사이에
			새로운 줄을 만들고 나타난다.
			즉, 블록 하나가 한 줄 전체를 차지하는 것
			예시)
				<p>apple</p><div>banana</div><p>pear</p>
				거의 레이아웃을 짜기 위해 사용한다.

			블록(block)
				<p>, <h>, <ul>, <ol>, <div>, <form> 등

				<div> : 【다른 html 요소들을 하나로 묶는 데】
				          자주 사용되는 대표적인 블록 요소이다.
				          주로 여러 요소들의 스타일을 한 번에 적용하기 위해 사용된다.

		인라인 요소(Inline elements)
			보통 블록 레벨 요소 내에 포함되어 사용된다.
			새로운 줄을 만들지 않고 작성한 단락 내에 나타난다.
			예시)
				<p><a>apple</a><span>banana</span></p>

			인라인(Inline)
				<span>, <a>, <img>, <em>, <strong>, <sup>, <sub>, 등

				<span> : 【텍스트의 특정 부분을 묶는 데】 자주 사용되는 요소
					주로 텍스트의 특정 부분에 따로 스타일을 적용하기 위해 사용된다.

		※ <div>와 <span>은 감싸도 변화가 전혀 없다.
			그냥 【묶는 용도로 사용】
-------------------------------------------------------------------------------------------------------------------
속성(Attributes)
	요소는 속성을 가질 수 있다.
	속성은 요소에 나타내고 싶지 않지만 추가적인 내용을 담고 싶을 때 사용한다.
	특히 【id나 class 속성은】 스타일에 관련된 내용이나 
		기타 내용을 위해 【해당 태그를 찾을 수 있는 구분점 역할】을 한다.

	<p id="test" class="a" style="color:blue;">You are much better</p>

	속성 사용 시 주의사항
		1. 요소이름 다음에 오는 속성은 요소 이름과 속성 사이에 공백이 있어야하고,
		   여러 속성이 있을 경우에는 속성과 속성 사이에도 공백이 있어야 한다.
			【띄어쓰기를 하자.】
		2. 속성 이름 다음에는 등호(=)를 작성한다.
		3. 속성 값은 따옴표(아무거나 상관없음) 안에 작성한다.
			생략이 가능한 속성도 있다.

	HTML 주의사항
		1. HTML은 대소문자를 구분하지 않는다.
		2. 속성의 값은 따옴표를 사용하지 않아도 되는 경우가 있지만,
		   띄어쓰기가 있을 경우 반드시 따옴표를 작성한다.
			【그냥 전부 따옴표를 쓰자.】
		3. HTML에서 작은 따옴표와 큰 따옴표는 둘 다 같은 의미이다.
			다만 【따옴표 안에 따옴표를 사용할 경우에는 종류가 다르게 쓴다.】
			ex) "javascript:alert('a');"
-------------------------------------------------------------------------------------------------------------------
<!-- 주석 -->
	Ctrl + Shift  /

<!DOCTYPE html>
	HTML5 시작을 알리는 선언
	형식상 사용하는 것

<html lang="ko">
	한국형 웹 컨텐츠 접근성 지침에서 웹 페이지의 html 요소 안에
	페이지의 기본 언어 선언을 규정하고 있따.
	따라서 화면 낭독 프로그램이 언어를 인식하여 자동으로 음성을 변환하거나,
	해당 언어에 적합한 발음을 제공할 수 있도록 하기 위해 정의 하는 부분
		
<meta charset="UTF-8">
	charset
		웹 브라우저는 문서를 표시할 때 변환하는 처리작업 즉, 인코딩을 하게 되고
		【파일이 어떤 언어로 되어 있는지 지정이 필요하다.】
		이를 charset이라고 한다.

		인코딩 방식이 서로 맞지 않으면 문자가 깨질 수 있다.
		전 세계의 다양한 웹 페이지 인코딩 방식은 대부분 UTF-8이고,
		다국어를 지원하기 때문에 개발 시 UTF-8 인코딩 방식으로 개발한다.
		한국어는 MS949, UTF-8, EUC-KR 등 많은 인코딩이 지원되지만,
		완성형과 조합형의 구분으로 인해 메모리에 효율이 좋은 UTF-8을 default로 사용하는 것이 좋다.

	검색 엔진 노출 및 최적화
		<meta name="주제" content="페이지설명(45자 이내)>
			검색 엔진이 페이지 내용을 파악할 때 기본으로 사용하는 데이터이므로
			제목과 설명은 페이지를 잘 표현할 수 있도록 페이지마다 고유하게 작성한다.
				※ meta = metadata의 약자로 html 문서를 부가 설명해주는 역할

		<title> 태그
			<title>페이지제목(15자이내)</title>

		<h> 태그
			제목을 표현할 수 있는 다양한 글자 크기를 제공하는 태그
			<h1>~<h6>까지 다양한 크기로 제목을 표현할 수 있다.
			검색 엔진은 각 웹 사이트의 내용을 <h>태그를 통해서 키워드를 수집한다.
			따라서 <h>태그로 작성하면 검색 엔진에 노출되는 확률을 높일 수 있다.

		※ 모든 조건이 같다면 이 세가지를 작성한 html이 검색 엔진에 더 많이 노출되는 것이다.
-------------------------------------------------------------------------------------------------------------------
태그를 태그로 인식하지 못하도록 하는 문법
	< : &lt; (less than)
	> : &gt; (greater than)
	& : &amp (ampersand)
	" : <q> or &quot; (quotation)
	공백 : &nbsp;
		스페이스 바 공백은 몇 번을 치더라도 한 번으로만 인식되기 때문에
		여러 번 치고 싶을 경우 &nbsp;를 여러번 입력한다.
-------------------------------------------------------------------------------------------------------------------
<p> 태그(글 단락 태그)
	내용상 끊어서 구분할 수 있는 하나하나의 부분을 의미하고, 이를 문단이라고 한다.
	<p> 태그를 이용하여 이러한 문단을 표현한다.
-------------------------------------------------------------------------------------------------------------------
format에 관련된 태그들
	<strong>, <b> : 【글씨 진하게】
		<b>태그는 단순히 텍스트를 진하게 표시한다.
		<strong>태그는 텍스트를 진하게 표시하고,
			실제 페이지 내에 중요한 부분을 브라우저에게 알려주는 역할도 한다.
			브라우저에서 웹 접근성으로 인식되며 스크린 리터로 페이지를 읽을 때
			거센 억양으로 음을 낼 수 있도록 강조한다.

	<i>, <em> : 【글씨 기울이기】
		<i>태그는 단순히 화면의 텍스트를 이태릭체(기울임)로 표현한다.
		<em>태그는 텍스트를 이태릭체로 표현하고, 그 내용이 중요하다는 의미도 함께 포함한다.
	
	<mark> : 【형광펜】, 텍스트 하이라이팅 효과
	<del> : 【텍스트 중앙에 가로줄】을 만들어서 텍스트를 지운 것과 같은 효과
	<ins> : 【텍스트 밑에 선을 추가】하여 텍스트 강조 효과
	<sup>, <sub> : 【위 첨자(superscript)와 아래 첨자(subscript)】
-------------------------------------------------------------------------------------------------------------------
<table> 태그
	여러 종류의 데이터가 행과 열로 정리된 표
	<tr> : 행
	<th> : 컬럼명
	<td> : 열

	border : 테두리의 굵기, 생략하면 defalut로 되어서 테두리가 없다.
	width : 표의 가로 길이, %로 주면 창 전체 크기의 %로 만들어진다.
	margin : 바깥여백, 상하좌우를 따로 명시하지 않으면 전체 바깥여백
		margin: 0 auto;로 작성하면 상하는 0이고 가운데 정렬이 된다.
	border-collapse:collapse : 테이블의 테두리와 행, 열 안에 있는 테이블의 테두리를 하나로 병합
	text-align:center : 테이블 안에 있는 텍스트 가운데 정렬

	<caption> 태그
		테이블의 상단에 제목이나 짧은 설명을 붙일 수 있다.
		<table> 하나 당 <caption> 하나만 사용 가능
		【테이블의 타이틀】

	테이블 병합
		colspan(column span)
			colspan="합칠 열 개수(현재 자리를 포함)"
			좌에서 우로 합쳐지고 현재 행에만 적용
			현재 행과 작성한 열 개수만큼 우측으로 병합

		rowspan(row span)
			rowspan="합칠 행 개수(현재 자리를 포함)"
			현재 행과 아래 행이 합쳐지고 다음 해잉 없다면 적용 안된다.

	<colgroup> 태그
		뒤에 나오는 컬럼(th, td 태그)에 적용할 스타일을 해당 태그에서 미리 적용할 수 있게 한다.	
		특히 각 컬럼의 길이를 설정하는 데 가장 많이 쓰인다.
		모든 열에 적용
		예시)
			<table>
				<colgroup>
					<col style="">	//1열
					<col style="">	//2열
					<col style="">	//3열
					<col style="">	//4열			
				<colgroup>
				<tr>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
				</tr>
			</table>

	<thead>, <tbody>, <tfoot> 태그
		행을 묶어서 스타일을 지정한다.
		하나의 테이블에 각각의 태그는 하나씩 사용 가능하다.
		예시)
			<style>
				thead{ 적용할 내용; }
				tbody{ 적용할 내용; }
				tfoot{ 적용할 내용; }
			</style>
			<table>
				<thead>
					<tr></tr>
				<thead>
				<tbody>
					<tr></tr>
					<tr></tr>
					<tr></tr>
				</tbody>
				<tfoot>
					<tr></tr>
					<tr></tr>
				</tfoot>
			</table>

		※ 우선순위가 같다면 마지막에 적용한게 나온다.
			위에서 아래로, 먼저 나오면 적용되고 그 위에 나중에 나오는게 적용되는 것
-------------------------------------------------------------------------------------------------------------------
<ul>, <ol> 태그
	<li> 태그로 리스트에 내용을 채워준다.

	<ul>
		순서가 없는 리스트(unordered list)
		· 를 바꾸고 싶을 경우 list-style
		
	<ol>
		순서가 있는 리스트(ordered list)
		type으로 어떤 순서를 줄 것인지 알려주고,
			type 값
				1 : 숫자(1, 2, 3, ... )
				A : 알파벳 대문자
				a : 알파벳 소문자
				i : 로마숫자(i, ii, iii, ... )
				I : 로마숫자(I, II, III, ... )
		start로 어디부터 시작인지 알려준다.

		예시)
			<ol type="a" start="3">
				a, b, c순서이고 c부터 시작한다.
-------------------------------------------------------------------------------------------------------------------
<dl>, <dt>, <dd> 태그
	정의 태그
	용어와 그에 대한 정의를 모아 놓은 리스트
	<dt>와 <dd>는 <dl> 안에서 사용해야 한다.
	<dl> : Definition-List, 전체 틀같은 것
	<dt> : Definition-Term, 타이틀, 제목
	<dd> : Definition-Description, 설명, 내용

	예시)
		<dl>
			<dt>제목</dt>
			<dd>내용1<dd>
			<dd>내용2<dd>
		</dl>
-------------------------------------------------------------------------------------------------------------------
<link> 태그
	HTML 링크(link)
	현재 페이지에서 다른 페이지로 이동하고자 할 때 하이퍼링크를 사용한다.
	보통 링크라고 부르며, <a>태그를 사용한다.

	<link>
		<head>태그 안에 배치하며,
		rel(relation)으로 현재 문서와 연결한 아이템의 관계를 설명하고(어떤걸 참조할꺼니?),
		href로 경로에 있는 것을 불러온다(링크가 뭐니?).

	<a>
		<body>태그 안에 배치하며,
		href로 경로로 이동한다.
		
		스타일
			text-decoration:none : 밑줄 없애기
			link : 한 번도 클릭을 하지 않은 것
			visited : 한 번이라도 클릭을 했던 것
			hover : 마우스를 올렸을 때
			active : 클릭을 한 상태
	
	※ <link>는 불러오기, <a>는 이동하기
	
	예시)
		<a href="페이지의 경로 or 사이트 주소">문자열 or 이미지</a>
			이미지를 넣었을 때는 이미지를 클릭하면 href의 주소로 이동한다.

		<a href="페이지의 경로 or 사이트 주소" target="_blank">
			경로를 클릭했을 때 새 탭에서 열린다.

		<a>를 사용하지 않고 링크 걸기
			<p onclick=window.open("페이지의 경로 or 사이트 주소")></p>
				<tr></tr>사이에 넣으면 행 전체에 이벤트가 걸린다.	

	스타일을 자주 사용할 경우 .css 파일로 생성한 뒤
		<link rel="stylesheet" href=".css파일 경로">로 사용

	anchor(닻, 책갈피)
		<a> 태그의 id 속성을 이용하면 간단한 책갈피를 만들 수 있다.
		우선 책갈피를 통해 가고 싶은 위치에 태그를 만들고 id 속성을 작성한다.
		작성한 id 속성값을 이용하여 다른 <a> 태그에 링크를 건다.
			id 속성값을 사용할 때는 #아이디명
-------------------------------------------------------------------------------------------------------------------
<img> 태그
	비어있는 요소, void 요소(EMpty elements)
	주로 문서에 무언가를 첨부하기 위해서 사용되며 단일 태그라고 한다.
		※ 단일 태그(Single Tag) : 닫는 태그가 없는 것

	<img src="이미지경로" alt="경로에 이미지가 없다면 출력할 텍스트">

	1. 웹 페에지에서 주로 사용되는 이미지의 종류
		1) JPEG 이미지 : .jpg, .jpeg 휴대폰, 카메라 사진
		2) GIF 이미지 : .gih 움직이는 이미지
		3) PNG 이미지 : .png 배경을 투명화 할 때 사용

	2. HTML 문서에 이미지를 삽입할 때에는 <img> 태그를 사용한다.
		1) 절대 경로 : 현재 어디에 위치해도 찾아갈 수 있는 경로
		2) 상대 경로 : 현재 작성하는 파일 기준으로 찾아가는 경로
				. : 현재 경로
				.. : 이전 경로

	3. 무료 icon 사이트
		http://www.iconfinder.com/icon-sets/popular/3

	※ 브라우저의 버전 또는 환경에 따라 절대 경로에 대한 보안성이 다르다.
	   만약 절대 경로를 막아준다면 보안성을 강조하는 브라우저이며,
	   모든 사용자가 개발자의 로컬 경로를 알게 되면 피해를 입을 수 있기 때문에
	   절대 경로는 사용하지 않는 것이 좋다.

	※ 주소의 맨 앞에 /가 있으면 최상위 경로부터 시작, 없으면 현재 경로부터 시작

	※ 이미지 우클릭 → 이미지 주소 복사
-------------------------------------------------------------------------------------------------------------------
float 속성
	정렬하기 위해 사용되는 속성
	창에서 블록의 길이를 제외한 공간을 다른 블록이 사용할 수 있게 해주는 것이다.
	블록은 한 줄 전체를 차지하기 때문에
	만약 □■ 구조로 블록 2개를 배치하고 싶은 경우 사용한다.
	
	속성 값
		none : 띄우지 않음(default)
		left : 왼쪽에 띄움
		right : 오른쪽에 띄움
		initial : 기본값으로 설정함
		inherit : 부모 요소로부터 상속함

clear 속성
	취소하다라는 뜻으로 float을 취소한다.
	
	속성 값
		none : clear를 설정하지 않음(default)
		left : 왼쪽을 취소
		right : 오른쪽을 취소
		both : 왼쪽 오른쪽을 취소

	※ clear 설정한 객체는 줄바꿈이 된다.

※ float 해제하는 방법
	1. float된 요소의 부모태그에 강제로 높이 값을 지정해줍니다. (단점 : 반응형시 자동 높이 값 설정 불가)
	2. float된 요소의 부모태그에 overflow:hidden을 적용해줍니다. (단점 : 해당 요소 안의 컨텐츠를 박스 외부로 표현해줄 수 없음)
	3. float된 요소의 부모태그에 overflow:auto를 적용해줍니다. (단점 : 특정 브라우저에서 스크롤 바가 표시 됨)
	4. float된 요소의 부모태그에 float을 또 설정해줍니다. (단점 : 가운데 배치 불가능)
	5. float된 요소의 다음에 나오는 태그에 clear:both를 지정합니다.(단점 : clear:both가 적용된 요소에는 margin-top 적용 불가)
	6. float된 요소의 부모태그에 가상요소를 만들고 해당 요소에 clear:both를 지정해줍니다. **권장

	※ 가상요소
		가상요소 ::after를 사용해준다.
		float된 요소의 부모태그::after{
			content:'';
			display:block;
			clear:both;
		}
-------------------------------------------------------------------------------------------------------------------	
<form> 태그
	자주 쓰이는 태그
	웹 페이지 내에서 사용자로부터 입력을 받을 때 사용하는 태그
	【사용자가 입력한 데이터를 다른 페이지로 전송할 때】 <form> 태그를 사용한다.
		getParameter()의 매개변수로 받는다.

	<form action="데이터를 전달할 URL or 페이지의 경로" method="전송방식" name="이름">
		action : 클릭했을 때 데이터를 전달할 페이지의 경로
		method : get, post, delete, patch, put, ...
			get은 입력한 정보가 url에 나옴
			post는 안나옴		
		name : <form> 태그를 구분할 수 있는 구분점

		action은 생략이 가능하고, 생략 시 현재 페이지로 이동한다.
		method는 생략이 가능하고, default가 get

		입력 양식 ...
	</form>

<input> 태그
	【입력 받기 위해 사용되는 태그】

	size : 글 상자의 크기(값의 길이 아님)
	maxlength : 값의 최대 길이
	placeholder : 사용자가 입력하기 전에 미리 보여줄 메세지
	readonly : 수정할 수 없도록 하는 설정
	name : 요소의 이름을 설정(파라미터의 key
	value : 미리 값을 지정(파라미터의 value값)
	required : 필수 항목(입력하지 않으면 넘어가지 않는다.)

	type 값
		<input type="값">

		*text : 텍스트 입력(작성한 텍스트가 눈으로 보임)
		*password : 텍스트 입력(작성한 텍스트가 눈에 안보임)
		*radio : 여러 개 중 하나의 옵션만 선택 가능(◎)
			checked를 하면 처음부터 체크가 되어 있다.
		*checkbox : 여러 개 중 다수의 옵션 선택 가능
			    배열의 형태로 전달이 된다.
		*file : 파일 전송(첨부파일에서 사용)
		color : 원하는 색상을 정의
		*email : 이메일 입력(골뱅이 안쓰면 안넘어감)
		url : http://로 시작해야 함
		tel : 핸드폰 번호 입력
		*date : 날짜 입력(브라우저별로 달력 UI가 다름)
		number, value, min, max, step : 숫자 입력(수치를 조절할 수 있는 상하 버튼 생성)
					    버튼을 누를 때마다 value부터 step만큼 증가, 감소한다.
		range : 일정 범위 안의 값만 입력
			드래그 앤 드랍으로 수치를 입력
		search : 검색어를 입력(x버튼이 생겨서 전체 삭제 기능 지원)
		*button, submit, reset : 버튼
				      submit과 <button> 태그는 누르자마자 action으로 이동
				      	(마지막에 완료 버튼에만 사용)
				      그 외에는 전부 type="button을 쓴다.
				      reset은 입력한 정보를 전부 초기화 하는 버튼

		※ *이 자주 사용하는 것들
				    
	버튼을 눌렀을 때 알림창 띄우기 
		<body>태그 밖에서 <script>태그를 생성하고
		function 메소드이름(){
			alert("msg");
		}를 선언한 후
		사용할 태그 속성값으로 onclick="메소드명()"을 쓴다.

	선택 입력(<select>, <option>)
		<select> 태그는 여러 개의 옵션이 드롭다운 리스트로 되어 있으며 
		그 중에서 단 하나의 옵션만을 입력받을 수 있다.
		<option> 태그는 드롭다운 리스트에서 선택할 수 있는 각각의 옵션
			※ 드롭다운 리스트 : 누르면 밑으로 옵션들이 내려오면서 거기서 고르는거
		예시)
			<select name="">
				<option value="실제 값">표현 값</option>
				<option value="실제 값">표현 값</option>
					표현 값 : 사용자가 보는 값
					실제 값 : 개발자가 보는 값
			</select>

	문장 입력(<textarea>)
		<textarea> 태그는 사용자로부터 여러 줄의 텍스트를 입력받을 수 있다.
		<textarea cols="가로글자수크기" rows="세로글자수크기">실제 값</textarea>
			박스의 크기를 조절하려면 style="width:크기px;"
			박스 속성 값
				style="resize: none;" : 드래그 가능한 영역이 제거되어 고정된 크기
				style="resize: both;" : 높이 및 너비 조절 모두 가능하도록 처리
				style="resize: vertical;" :  높이 조절만 가능하도록 처리
				style="resize: horizontal;" : 넓이 조절만 가능하도록 처리

	<datalist>
		<form> 태그에서 미리 지정된 옵션 목록을 제공
		사용자들이 특정 글자를 입력하면 그에 해당하는 미리 지정된 목록을 보여준다.
			【검색 시 자동완성 같은 것】

		<input type="text" list="datalist id값">
		<datalist id="datalist id값">
			<option value="실제 값1" label="표기할 값1"></option>
			<option value="실제 값2" label="표기할 값2"></option>
			<option value="실제 값3" label="표기할 값3"></option>
		</datalist>

	진행 정도(<progress>)
		<progress> 태그를 이용하면 진행 정도를 나타낼 수 있다.
		<progress value="현재 값" max="최대 값"></progress>
		진행 정도 변경 예시)
			<body>
				<div>
					<progress value="20" max="100" id="pg"></progress>
				</div>
				<button onclick="pgFunction()">Click</button>
			</body>
			<script>
				function pgFunction(){
					document.getElementById("pg").value="80";
					/* document.getElementById("pg") 전체가 <progress> 태그 */
				}
			</script>				
	
	<fieldset>
		<fieldset> 태그는 관련 있는 form 필드 세트를 표시한다.
		form 필드 세트는 【form 내에서 관련 컨트롤을 하나의 그룹으로 묶은 것】을 의미한다.

		<legend>
			<fieldset> 태그의 제목을 표시
			묶음에 대한 설명을 할 때 사용한다.(타이틀)

		예시
			<fieldset>
				<legend>취미</legend>
				<p>
					<label>드라이브<input type="checkbox" name="hobby" value="드라이브"></label>
					<label>등산<input type="checkbox" name="hobby" value="등산"></label>
					<label>영화감상<input type="checkbox" name="hobby" value="영화감상"></label>
					<label>게임<input type="checkbox" name="hobby" value="게임"></label>
				</p>
			</fieldset>

	※ 태그 = 요소
-------------------------------------------------------------------------------------------------------------------
※ 보통 <script>는 </body> 밑에 쓰는게 가장 효율이 좋다.

※ JAVA EE : 하나의 프로젝트가 하나의 프로그램이다.