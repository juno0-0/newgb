전자정부표준프레임워크(egov)
	정부 공공 프로젝트 등 상용화 혹은 서비스해야할 상품을 제작할 때
	표준 라이브러리만 제공해준다.
------------------------------------------------------------------------------------------------
엔드 : 서버

REST : 데이터를 파라미터로 전달하는게 아니라 JSON 파일로 전송하는 것

웹 디자이너 : 포토샵, 일러스트 파일로 웹 개발에 필요한 요소 디자인
프론트 엔드 : 백에서 요청한 뷰를 알맞게 응답
퍼블리셔 : 한국에만 있는 직종, 프론트 엔드 개발자를 도와주는 역할
백 엔드 : REST
풀스택 : 백 + 프론트 + 엔드
	
※ 프론트에서 문제가 생기면 퍼블리셔한테 가야한다.
	프론트 엔드한테 가는게 아님 
	
1. 웹 디자인 포토샵 파일 완성
2. 프론트 엔드 개발자가 각 요소를 디자인 이미지에서 분리
3. 백 엔드 개발자가 해당 이미지를 사용

클라이언트 > 백 단 서버 > 연산, 동적데이터 처리 
> 응답 > 프론트 요청 > 프론트 응답 > 백 단 응답

※ 렌더링 : 브라우저에서 해석해서 뿌려주는 것
------------------------------------------------------------------------------------------------
검색 결과 페이징 처리 > 

쿼리스트링을 만들어주는 라이브러리 
	UriComponentsBuilder builder = UriComponentsBuilder.fromPath("")
		.queryParam("keyword", this.keyword)
			첫번째면 자동으로 맨 앞에 ?를 무조건 붙여준다.

	리턴에는 builder.toUriString()를 쓰면 만들어둔걸 리턴해준다.

	jsp에서 /board/list${pageMaker.cri.getListLink()} 이런식으로만 사용하면 된다.
		만약 다른 쿼리스트링이 있다면 ?가 반드시 붙기 때문에 
		원래 있던 쿼리스트링 앞에 ${pageMaker.cri.getListLink()}를 써주고
		&로 연결하고 기존꺼를 쓴다.
		ex) /board/list${pageMaker.cri.getListLink()}&bno=${board.bno}

@RunWith(SpringRunner.class)
	RunWith(SpringJUnit4ClassRunner의 자식이며,
	4.3버전 이상부터 사용가능한 확장판이다.


테이블 생성 > VO > 매퍼인터페이스 > 매퍼.xml > 테스트 
> 서비스 인터페이스 > 서비스 임플 > 테스트 > 여기까지가 persistence Tiar > 사용
