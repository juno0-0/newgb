접근권한 제어자(약속, 경고)
	보안이라기에는 너무 취약함
	자료형 앞에 작성하여 영역관리를 할 수 있다.

	defalut : 【다른 패키지】에서 사용할 수 없다.
	public : 【모든 곳】에서 사용할 수 있다.(패키지 안에서 메인 클래스 앞에 작성한다.)
	protected : 【다른 패키지】에서 사용할 수 없다.(자식이면 가능)
	private : 【다른 클래스】에서 사용할 수 없다.

	private이 직접 접근이 막는 이유
		JSP에서는 태그로 변수에 접근하는데
		메소드로만 호출할 수 있다.

------------------------------------------------------------
추상메소드
	{ } 바디가 존재하지 않는다.
	세부적인 내용들이 정의되어 있지 않은 상태이다.

추상클래스(불완전한 클래스)
	추상메소드가 한 개 이상 포함이 된다면, 클래스는 추상 클래스로 선언해야 한다.
	구체적인 내용은 하위 클래스(자식)에서 재정의하여 구현한다.
	자식에서는 반드시 구현해야 하기 때문에 이를 강제성이라고 한다.

추상클래스 선언
	abstract class 추상클래스명{
		abstract 리턴타입 추상메소드명();
	}

	일반 클래스는 클래스가 추상적
	추상 클래스는 필드도 추상적
	추상클래스에서도 일반 메소드만 쓸 수 있지만 그럼 추상클래스를 쓰는 이유가 없다.

	클래스도 저장공간이다.(객체, 메소드, 변수 전부 저장공간)

인터페이스(틀)
	추상 클래스를 고도화 시킨 문법이다.
	반드시 추상메소드와 상수만 선언해야 한다.
	다른 클래스에서 인터페이스를 지정받을 때 implements를 사용한다.
	인터페이스는 여러 개를 지정받을 수 있다.
	지정받은 자식 클래스에서는 인터페이스가 가지고 있는 추상 메소드를
	반드시 재정의 해야한다.

	jdk1.8부터 인터페이스에서 default 메소드를 선언할 수 있다.({ }가 있는 메소드)
	사실상 다중상속을 지원하게 된다.
	(default 메소드가 있는 인터페이스를 여러 개 implements하고 가져다 씀)

	인터페이스끼리 모호성이 발생하면, 지정받은 클래스에서 재정의를 통해 해결한다.
	부모 클래스와 인터페이스가 모호성이 발생하면, 부모 클래스가 호출된다.

	필드는 final static이 생략되어 있음
	메소드는 abstract가 생략되어 있음

다중상속(파이썬은 가능함)
	하나의 자식이 여러 부모를 상속받는 기법.
	여러 부모 클래스에 같은 이름의 필드가 있고, 이를 자식 클래스에서 사용했을 경우
	어떤 부모의 필드인지 알 수 없기 때문에 문제가 발생한다.
	이를 모호성이라고 한다. 모호성의 문제가 심각하기 때문에 JAVA에서는
	다중 상속을 지원하지 않으며, 해결 방법으로 인터페이스 기술을 제시하였다.
	
	

클래스가 인터페이스를 바로 받으면 필요 없는 메소드까지 재정의해야 하기 때문에
중간에 추상클래스를 넣어 추상클래스가 인터페이스를 받고
클래스가 추상클래스를 상속받는다.

인터페이스도 부모다.
추상클래스가 인터페이스를 받고 클래스가 추상클래스를 상속받아도
메소드의 타입은 인터페이스의 타입

Event에서의 추상클래스와 인터페이스
	인터페이스를 지정받으면 모든 것을 구현해야 한다.
	하지만 굳이 모든 것을 구현하지 않고 원하는 것을 골라서 구현하고 싶을 때에는
	해당 인터페이스를 지정받은 추상클래스를 상속받은 후 재정의하여 구현한다.

	Interface -> Abstract Class -> Class
	          강제성           강제성소멸

익명 클래스(Anonymous class)
	Anon class라고도 부름
	이름이 없는 클래스, 일회성

GUI
	컨테이너 : 컴포넌트를 배치할 수 있는 창
	컴포넌트 : 각 요소(버튼, 텍스트Area 등)
	레이아웃 : 컴포넌트 배치방법
	이벤트 : 마우스 혹은 키보드 입력 시  구현해야할 메소드

	모든 이벤트를 구현하고자 할 때에는 인터페이스 구현,
	원하는 이벤트를 골라서 구현할 때에는 이벤트 인터페이스를 지정받은
	추상클래스 구현.

------------------------------------------------------------
마커 인터페이스

예외처리

API(배포, 임포트)

ctrl + d : 한 줄 삭제

